{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/movies-app/src/components/movies/MoviesList.jsx\";\nimport React, { Component } from 'react';\nimport Movie from \"./Movie\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport MoviePreview from './parts/MoviePreview';\nimport { apiGetRequest } from '../../api/api';\n\nclass MoviesList extends Component {\n  constructor() {\n    super();\n\n    this.handleMovieSelect = (row_id, movie_id) => {\n      const body = document.querySelector('body');\n      body.style.overflow = row_id ? 'hidden' : '';\n      body.style.pointerEvents = row_id ? 'none' : '';\n      setTimeout(() => {\n        body.style.pointerEvents = 'all';\n      }, 800);\n      this.setState({\n        selected: row_id,\n        movie_id\n      });\n\n      if (movie_id) {\n        this.getMoviewDetails(movie_id);\n      }\n    };\n\n    this.getMoviewDetails = async movie_id => {\n      const api = \"movie/\".concat(movie_id);\n      const res = await apiGetRequest(api);\n\n      if (res) {\n        this.setState({\n          movie_details: res\n        });\n      }\n    };\n\n    this.state = {};\n  }\n\n  render() {\n    const _this$props = this.props,\n          stop = _this$props.stop,\n          movies = _this$props.movies;\n    const _this$state = this.state,\n          selected = _this$state.selected,\n          movie_details = _this$state.movie_details;\n    return React.createElement(\"section\", {\n      className: \"movies__list flex__start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(InfiniteScroll, {\n      pageStart: 0,\n      loadMore: this.props.loadElements,\n      hasMore: !stop,\n      loader: React.createElement(\"div\", {\n        className: \"loader\",\n        key: 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Loading ...\") //   getScrollParent={() => this.scrollParentRef}\n      ,\n      useWindow: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, movies && movies.length > 0 ? movies.map((list, i) => {\n      return React.createElement(\"ul\", {\n        id: selected === i ? \"selected__row\" : \"\",\n        className: \"movies__list__flex flex__center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, list.map(m => {\n        return React.createElement(Movie, {\n          selected: selected === i,\n          handleMovieSelect: () => this.handleMovieSelect(i, m.id),\n          movie: m,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        });\n      }), selected === i ? React.createElement(MoviePreview, {\n        movie_details: movie_details,\n        handleMovieSelect: this.handleMovieSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }) : \"\");\n    }) : \"\"));\n  }\n\n}\n\nexport default MoviesList;","map":{"version":3,"sources":["/Users/denis/Desktop/projects/movies-app/src/components/movies/MoviesList.jsx"],"names":["React","Component","Movie","InfiniteScroll","MoviePreview","apiGetRequest","MoviesList","constructor","handleMovieSelect","row_id","movie_id","body","document","querySelector","style","overflow","pointerEvents","setTimeout","setState","selected","getMoviewDetails","api","res","movie_details","state","render","props","stop","movies","loadElements","length","map","list","i","m","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Movie from \"./Movie\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport MoviePreview from './parts/MoviePreview';\nimport { apiGetRequest } from '../../api/api';\n\n\n\nclass MoviesList extends Component {\n    constructor(){\n        super()\n        this.state = {\n\n        }\n    }\n\n\n    handleMovieSelect = (row_id, movie_id) => {\n      const body = document.querySelector('body')\n      body.style.overflow = row_id ? 'hidden'  :''\n      body.style.pointerEvents = row_id ? 'none'  :''\n      setTimeout(() => {\n        body.style.pointerEvents = 'all'\n      }, 800);\n      this.setState({\n        selected: row_id,\n        movie_id\n      });\n      if(movie_id){\n          this.getMoviewDetails(movie_id)\n      }\n    };\n\n\n    getMoviewDetails = async (movie_id) => {\n      const api = `movie/${movie_id}`\n      const res  = await apiGetRequest(api)\n     if(res){\n       this.setState({\n         movie_details:res\n       })\n     }\n    }\n\n\n\n  \n\n\n    render() {\n        const {stop, movies} = this.props\n        const {selected, movie_details} = this.state\n        return (\n            <section className=\"movies__list flex__start\">\n            <InfiniteScroll\n              pageStart={0}\n              loadMore={this.props.loadElements}\n              hasMore={!stop}\n              loader={\n                <div className=\"loader\" key={0}>\n                  Loading ...\n                </div>\n              }\n            //   getScrollParent={() => this.scrollParentRef}\n              useWindow={false}\n            >\n              {movies && movies.length > 0\n                ? movies.map((list, i) => {\n                    return (\n                      <ul\n                        id={selected === i ? \"selected__row\" : \"\"}\n                        className=\"movies__list__flex flex__center\"\n                      >\n                        {list.map((m) => {\n                          return (\n                            <Movie\n                            selected = {selected === i}\n                              handleMovieSelect={() => this.handleMovieSelect(i, m.id)}\n                              movie={m}\n                            />\n                          );\n                        })}\n                        {selected === i ? <MoviePreview \n                        movie_details = {movie_details}\n                        handleMovieSelect = {this.handleMovieSelect}\n                        /> : \"\"}\n                      </ul>\n                    );\n                  })\n                : \"\"}\n            </InfiniteScroll>\n          </section>\n        );\n    }\n}\n\nexport default MoviesList;"]},"metadata":{},"sourceType":"module"}