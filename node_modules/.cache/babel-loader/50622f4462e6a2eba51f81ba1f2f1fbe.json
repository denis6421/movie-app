{"ast":null,"code":"import _toConsumableArray from\"/Users/denis/Desktop/projects/movies-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";export var generateList=function generateList(list){var arr=[];if(list&&list.length>0){list.forEach(function(element){return arr=[].concat(_toConsumableArray(arr),_toConsumableArray(element));});}return arr;};export var generateArrays=function generateArrays(list,pending_movies,size){var new_list=[].concat(_toConsumableArray(list),_toConsumableArray(pending_movies));var pending=[];var movies=[];if(new_list&&new_list.length>0){for(var i=0;i<new_list.length;i+=size){var sliced=new_list.slice(i,i+size);if(sliced.length===size){movies.push(sliced);}else{pending.push.apply(pending,_toConsumableArray(sliced));}}}return{movies:movies,pending:pending};};export var wait=function wait(time){return new Promise(function(res){return setTimeout(function(){return res();},time);});};export var getMovieSize=function getMovieSize(movies,pending_movies,width,size){var list=[];var obj={};if(width<=1500&&size!==5){size=5;list=generateList(movies);obj=generateArrays(list,pending_movies,size);obj.size=size;}if(width<=1200&&size!==4){size=4;list=generateList(movies);obj=generateArrays(list,pending_movies,size);obj.size=size;}if(width<=650&&size!==2){size=2;list=generateList(movies);obj=generateArrays(list,pending_movies,size);obj.size=size;}if(width>1500&&size!==6){size=6;list=generateList(movies);obj=generateArrays(list,pending_movies,size);obj.size=size;}return obj;};","map":{"version":3,"sources":["/Users/denis/Desktop/projects/movies-app/client/src/functions/functions.js"],"names":["generateList","list","arr","length","forEach","element","generateArrays","pending_movies","size","new_list","pending","movies","i","sliced","slice","push","wait","time","Promise","res","setTimeout","getMovieSize","width","obj"],"mappings":"8KAAA,MAAO,IAAMA,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,IAAD,CAAU,CACpC,GAAIC,CAAAA,GAAG,CAAG,EAAV,CACA,GAAGD,IAAI,EAAIA,IAAI,CAACE,MAAL,CAAc,CAAzB,CAA2B,CACzBF,IAAI,CAACG,OAAL,CAAa,SAACC,OAAD,CAAa,CACxB,MAAQH,CAAAA,GAAG,8BAAOA,GAAP,qBAAeG,OAAf,EAAX,CACD,CAFD,EAGD,CAED,MAAOH,CAAAA,GAAP,CACD,CATM,CAWP,MAAO,IAAMI,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACL,IAAD,CAAOM,cAAP,CAAuBC,IAAvB,CAAgC,CAC5D,GAAIC,CAAAA,QAAQ,8BAAOR,IAAP,qBAAgBM,cAAhB,EAAZ,CACA,GAAIG,CAAAA,OAAO,CAAG,EAAd,CACA,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,GAAGF,QAAQ,EAAIA,QAAQ,CAACN,MAAT,CAAkB,CAAjC,CAAmC,CACjC,IAAK,GAAIS,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGH,QAAQ,CAACN,MAA7B,CAAqCS,CAAC,EAAIJ,IAA1C,CAAgD,CAC9C,GAAIK,CAAAA,MAAM,CAAGJ,QAAQ,CAACK,KAAT,CAAeF,CAAf,CAAkBA,CAAC,CAAGJ,IAAtB,CAAb,CACA,GAAIK,MAAM,CAACV,MAAP,GAAkBK,IAAtB,CAA4B,CAC1BG,MAAM,CAACI,IAAP,CAAYF,MAAZ,EACD,CAFD,IAEO,CACLH,OAAO,CAACK,IAAR,OAAAL,OAAO,oBAASG,MAAT,EAAP,CACD,CACF,CACF,CACD,MAAO,CACLF,MAAM,CAANA,MADK,CAELD,OAAO,CAAPA,OAFK,CAAP,CAID,CAlBM,CAoBP,MAAO,IAAMM,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,IAAD,QAClB,IAAIC,CAAAA,OAAJ,CAAY,SAACC,GAAD,QAASC,CAAAA,UAAU,CAAC,iBAAMD,CAAAA,GAAG,EAAT,EAAD,CAAcF,IAAd,CAAnB,EAAZ,CADkB,EAAb,CAGP,MAAO,IAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACV,MAAD,CAASJ,cAAT,CAAyBe,KAAzB,CAAgCd,IAAhC,CAAyC,CACnE,GAAIP,CAAAA,IAAI,CAAG,EAAX,CACA,GAAIsB,CAAAA,GAAG,CAAG,EAAV,CAEA,GAAID,KAAK,EAAI,IAAT,EAAiBd,IAAI,GAAK,CAA9B,CAAiC,CAC/BA,IAAI,CAAG,CAAP,CACAP,IAAI,CAAGD,YAAY,CAACW,MAAD,CAAnB,CACAY,GAAG,CAAGjB,cAAc,CAACL,IAAD,CAAOM,cAAP,CAAuBC,IAAvB,CAApB,CACAe,GAAG,CAACf,IAAJ,CAAWA,IAAX,CAED,CAED,GAAIc,KAAK,EAAI,IAAT,EAAiBd,IAAI,GAAK,CAA9B,CAAiC,CAC/BA,IAAI,CAAG,CAAP,CACAP,IAAI,CAAGD,YAAY,CAACW,MAAD,CAAnB,CACAY,GAAG,CAAGjB,cAAc,CAACL,IAAD,CAAOM,cAAP,CAAuBC,IAAvB,CAApB,CACAe,GAAG,CAACf,IAAJ,CAAWA,IAAX,CAED,CAED,GAAIc,KAAK,EAAI,GAAT,EAAgBd,IAAI,GAAK,CAA7B,CAAgC,CAC9BA,IAAI,CAAG,CAAP,CACAP,IAAI,CAAGD,YAAY,CAACW,MAAD,CAAnB,CACAY,GAAG,CAAGjB,cAAc,CAACL,IAAD,CAAOM,cAAP,CAAuBC,IAAvB,CAApB,CACAe,GAAG,CAACf,IAAJ,CAAWA,IAAX,CAED,CAED,GAAIc,KAAK,CAAG,IAAR,EAAgBd,IAAI,GAAK,CAA7B,CAAgC,CAC9BA,IAAI,CAAG,CAAP,CACAP,IAAI,CAAGD,YAAY,CAACW,MAAD,CAAnB,CACAY,GAAG,CAAGjB,cAAc,CAACL,IAAD,CAAOM,cAAP,CAAuBC,IAAvB,CAApB,CACAe,GAAG,CAACf,IAAJ,CAAWA,IAAX,CAED,CAEF,MAAOe,CAAAA,GAAP,CACA,CArCM","sourcesContent":["export const generateList = (list) => {\n  let arr = [];\n  if(list && list.length > 0){\n    list.forEach((element) => {\n      return (arr = [...arr, ...element]);\n    });\n  }\n\n  return arr;\n};\n\nexport const generateArrays = (list, pending_movies, size) => {\n  let new_list = [...list, ...pending_movies];\n  let pending = [];\n  var movies = [];\n  if(new_list && new_list.length > 0){\n    for (var i = 0; i < new_list.length; i += size) {\n      let sliced = new_list.slice(i, i + size);\n      if (sliced.length === size) {\n        movies.push(sliced);\n      } else {\n        pending.push(...sliced);\n      }\n    }\n  }\n  return {\n    movies,\n    pending,\n  };\n};\n\nexport const wait = (time) =>\n  new Promise((res) => setTimeout(() => res(), time));\n\nexport const getMovieSize = (movies, pending_movies, width, size) => {\n  let list = [];\n  let obj = {};\n\n  if (width <= 1500 && size !== 5) {\n    size = 5;\n    list = generateList(movies);\n    obj = generateArrays(list, pending_movies, size);\n    obj.size = size;\n  \n  }\n\n  if (width <= 1200 && size !== 4) {\n    size = 4;\n    list = generateList(movies);\n    obj = generateArrays(list, pending_movies, size);\n    obj.size = size;\n  \n  }\n\n  if (width <= 650 && size !== 2) {\n    size = 2;\n    list = generateList(movies);\n    obj = generateArrays(list, pending_movies, size);\n    obj.size = size;\n  \n  }\n\n  if (width > 1500 && size !== 6) {\n    size = 6;\n    list = generateList(movies);\n    obj = generateArrays(list, pending_movies, size);\n    obj.size = size;\n  \n  }\n  \n return obj\n};\n"]},"metadata":{},"sourceType":"module"}