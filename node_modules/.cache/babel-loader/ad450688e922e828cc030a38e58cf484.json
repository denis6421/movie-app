{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/movies-app/client/src/components/movie-page/MoviePage.jsx\";\nimport React, { Component } from \"react\";\nimport \"./movie-page.css\";\nimport { MOVIES_ROUTE, MOVIE_ROUTE } from \"../../tools/routes\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/actions\";\nimport MovieCredits from \"./sections/MovieCredits\";\nimport MovieRelated from \"./sections/MovieRelated\";\nimport MoviePageAbout from \"./parts/MoviePageAbout\";\nimport { apiGetRequest } from \"../../api/api\";\n\nclass MoviePage extends Component {\n  constructor() {\n    super();\n\n    this.getMovieId = () => {\n      let url = window.location.pathname.split('/');\n      let movie_id = url[url.length - 1] ? url[url.length - 1] : this.props.match.params.id;\n      return movie_id;\n    };\n\n    this.getMovie = async movie_id => {\n      const api = \"movie/\".concat(movie_id);\n      const res = await apiGetRequest(api);\n\n      if (res) {\n        this.setState({\n          movie: res\n        });\n      }\n    };\n\n    this.getVideo = async movie_id => {\n      const api = \"movie/\".concat(movie_id, \"/videos\");\n      await apiGetRequest(api).then(res => {\n        this.setState({\n          video: res && res.results[0] ? res.results[0].key : \"\"\n        });\n      });\n    };\n\n    this.handleActiveSection = active_section => {\n      this.setState({\n        active_section\n      });\n    };\n\n    this.closePage = () => {\n      this.setState({\n        active: false\n      });\n      setTimeout(() => {\n        this.props.close();\n        window.history.pushState(\"/\", \"/\", \"/\");\n      }, 300);\n    };\n\n    this.back = () => {\n      const from_movies = this.props.from_movies;\n\n      if (from_movies) {\n        this.closePage();\n        this.props.updateGlobalReducer(\"pause_movie\", false);\n      } else this.props.history.push(MOVIES_ROUTE);\n    };\n\n    this.changeMovie = async id => {\n      await this.getMovie(id);\n      setTimeout(() => {\n        this.getVideo(id);\n      }, 400);\n      this.setState({\n        movie_id: id\n      });\n    };\n\n    this.state = {\n      movie: {}\n    };\n  }\n\n  async componentWillMount() {\n    const _this$props = this.props,\n          from_movies = _this$props.from_movies,\n          selected_movie = _this$props.selected_movie;\n    let movie_id = this.getMovieId();\n\n    if (from_movies) {\n      setTimeout(() => {\n        this.setState({\n          active: true\n        });\n      }, 50);\n    } else {\n      this.setState({\n        active: true\n      });\n    }\n\n    this.setState({\n      movie_id\n    });\n    await this.getMovie(movie_id);\n    setTimeout(() => {\n      this.getVideo(movie_id);\n    }, 400);\n  }\n\n  render() {\n    const _this$state = this.state,\n          active = _this$state.active,\n          movie = _this$state.movie,\n          active_section = _this$state.active_section,\n          movie_id = _this$state.movie_id,\n          fade_out = _this$state.fade_out,\n          video = _this$state.video;\n    const actions = [{\n      name: \"Reviews\",\n      value: \"reviews\"\n    }, {\n      name: \"Credits\",\n      value: \"credits\"\n    }, {\n      name: \"Related\",\n      value: \"similar\"\n    }];\n    return React.createElement(\"div\", {\n      id: active ? \"movie__page--active\" : \"\",\n      className: \"movie__page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"movie__page__overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \" \"), React.createElement(\"button\", {\n      onClick: () => this.back(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"X\"), React.createElement(MoviePageAbout, {\n      fade_out: fade_out,\n      movie_id: movie_id,\n      movie: movie,\n      video: video,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      className: \"movie__page__actions flex__center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, actions.map((m, i) => {\n      return React.createElement(\"li\", {\n        onClick: () => this.handleActiveSection(m.value),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, m.name);\n    })), React.createElement(\"div\", {\n      className: \"movie__page__content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, active_section === \"credits\" ? React.createElement(MovieCredits, {\n      movie_id: movie_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }) : active_section === \"similar\" ? React.createElement(MovieRelated, {\n      changeMovie: this.changeMovie,\n      movie_id: movie_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }) : \"\"));\n  }\n\n}\n\nfunction mapStateToProps({\n  global\n}) {\n  return {\n    global\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(MoviePage));","map":{"version":3,"sources":["/Users/denis/Desktop/projects/movies-app/client/src/components/movie-page/MoviePage.jsx"],"names":["React","Component","MOVIES_ROUTE","MOVIE_ROUTE","withRouter","connect","actions","MovieCredits","MovieRelated","MoviePageAbout","apiGetRequest","MoviePage","constructor","getMovieId","url","window","location","pathname","split","movie_id","length","props","match","params","id","getMovie","api","res","setState","movie","getVideo","then","video","results","key","handleActiveSection","active_section","closePage","active","setTimeout","close","history","pushState","back","from_movies","updateGlobalReducer","push","changeMovie","state","componentWillMount","selected_movie","render","fade_out","name","value","map","m","i","mapStateToProps","global"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./movie-page.css\";\nimport { MOVIES_ROUTE, MOVIE_ROUTE } from \"../../tools/routes\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions/actions\";\nimport MovieCredits from \"./sections/MovieCredits\";\nimport MovieRelated from \"./sections/MovieRelated\";\nimport MoviePageAbout from \"./parts/MoviePageAbout\";\nimport { apiGetRequest } from \"../../api/api\";\nclass MoviePage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movie: {},\n    };\n  }\n\n  getMovieId = () => {\n    let url = window.location.pathname.split('/')\n    let movie_id =url[url.length - 1] ? url[url.length - 1]  : this.props.match.params.id\n      \n      return movie_id\n  };\n\n  async componentWillMount() {\n    const { from_movies, selected_movie } = this.props;\n    let movie_id = this.getMovieId()\n    if (from_movies) {\n      setTimeout(() => {\n        this.setState({\n          active: true,\n        });\n      }, 50);\n    } else {\n      this.setState({\n        active: true,\n      });\n    }\n    this.setState({\n      movie_id,\n    });\n      await this.getMovie(movie_id)\n    setTimeout(() => {\n      this.getVideo(movie_id)\n    }, 400);\n  }\n  getMovie = async (movie_id) => {\n    const api = `movie/${movie_id}`;\n    const res = await apiGetRequest(api);\n    if (res) {\n      this.setState({\n        movie: res,\n      });\n    }\n  };\n\n  getVideo = async (movie_id) => {\n    const api = `movie/${movie_id}/videos`;\n    await apiGetRequest(api).then((res) => {\n      this.setState({\n        video: res && res.results[0] ? res.results[0].key : \"\",\n      });\n    });\n  };\n\n  handleActiveSection = (active_section) => {\n    this.setState({\n      active_section,\n    });\n  };\n\n  closePage = () => {\n    this.setState({\n      active: false,\n    });\n    setTimeout(() => {\n      this.props.close();\n      window.history.pushState(\"/\", \"/\", `/`);\n    }, 300);\n  };\n\n  back = () => {\n    const { from_movies } = this.props;\n    if (from_movies) {\n      this.closePage();\n      this.props.updateGlobalReducer(\"pause_movie\", false);\n    } else this.props.history.push(MOVIES_ROUTE);\n  };\n  changeMovie = async(id) => {\n    await this.getMovie(id)\n    setTimeout(() => {\n      this.getVideo(id)\n    }, 400);\n    this.setState({\n      movie_id:id\n    })\n  };\n  render() {\n    const { active, movie, active_section, movie_id, fade_out, video } = this.state;\n    const actions = [\n      {\n        name: \"Reviews\",\n        value: \"reviews\",\n      },\n      {\n        name: \"Credits\",\n        value: \"credits\",\n      },\n      {\n        name: \"Related\",\n        value: \"similar\",\n      },\n    ];\n\n    return (\n      <div id={active ? \"movie__page--active\" : \"\"} className=\"movie__page\">\n        <section className=\"movie__page__overlay\"> </section>\n        <button onClick={() => this.back()}>X</button>\n\n        {<MoviePageAbout fade_out={fade_out} movie_id={movie_id} movie = {movie} video = {video}  />}\n\n        <ul className=\"movie__page__actions flex__center\">\n          {actions.map((m, i) => {\n            return (\n              <li onClick={() => this.handleActiveSection(m.value)}>\n                {m.name}\n              </li>\n            );\n          })}\n        </ul>\n        <div className=\"movie__page__content\">\n          { active_section === \"credits\" ? (\n            <MovieCredits movie_id={movie_id} />\n          ) : active_section === \"similar\" ? (\n            <MovieRelated changeMovie={this.changeMovie} movie_id={movie_id} />\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ global }) {\n  return { global };\n}\n\nexport default withRouter(connect(mapStateToProps, actions)(MoviePage));\n"]},"metadata":{},"sourceType":"module"}