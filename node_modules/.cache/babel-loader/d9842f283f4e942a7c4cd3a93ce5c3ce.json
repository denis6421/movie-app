{"ast":null,"code":"var _jsxFileName = \"/Users/denis/Desktop/projects/movies-app/client/src/components/movies/MoviesList.jsx\";\nimport React, { Component } from \"react\";\nimport Movie from \"./Movie\";\nimport { wait, generateArrays, getMovieSize, generateList } from \"../../functions/functions\";\nimport MoviePopup from \"./parts/movie-preview/MoviePopup\";\nimport { apiGetRequest } from \"../../api/api\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Navbar from \"../navbar/Navbar\";\nimport SmallLoader from \"../parts/SmallLoader\";\n\nfunction isHidden(el) {\n  return el.offsetParent === null;\n}\n\nclass MoviesList extends Component {\n  constructor() {\n    super();\n\n    this.overflowBody = val => {\n      let body = document.querySelector('body');\n      body.style.overflow = val ? 'hidden' : '';\n    };\n\n    this.updateSize = async () => {\n      const _this$state = this.state,\n            movies = _this$state.movies,\n            pending_movies = _this$state.pending_movies,\n            size = _this$state.size;\n      const width = window.innerWidth;\n      const obj = await getMovieSize(movies, pending_movies, width, size);\n\n      if (obj.movies) {\n        this.setState({\n          movies: obj.movies,\n          pending_movies: obj.pending,\n          size: obj.size\n        });\n      }\n    };\n\n    this.handleMovieSelect = (row_id, movie) => {\n      this.setState({\n        selected: row_id,\n        selected_movie: movie,\n        show_popup: true\n      });\n      this.scrollToElement();\n    };\n\n    this.updateState = (name, value) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.scrollToElement = async () => {\n      const size = this.state.size;\n\n      if (size === 2) {\n        this.overflowBody(true);\n      }\n\n      wait(size === 2 ? 800 : 400).then(() => {\n        var element = document.querySelector(\"#selected__row__offset\");\n\n        if (element) {\n          element.scrollIntoView({\n            behavior: \"auto\",\n            block: \"start\",\n            inline: \"nearest\"\n          });\n        }\n      });\n    };\n\n    this.selectCategory = category => {\n      this.setState({\n        api: category.api,\n        page: 1,\n        movies: [],\n        pending_movies: [],\n        selected_movie: {},\n        show_popup: false,\n        selected: ''\n      }, () => {\n        this.loadElements();\n      });\n    };\n\n    this.closePreview = () => {\n      const size = this.state.size;\n      this.setState({\n        selected: \"\",\n        selected_movie: {},\n        show_popup: \"\"\n      });\n\n      if (size === 2) {\n        this.overflowBody(false);\n      }\n    };\n\n    this.loadElements = async () => {\n      const _this$state2 = this.state,\n            size = _this$state2.size,\n            page = _this$state2.page,\n            api = _this$state2.api;\n\n      try {\n        await apiGetRequest(api, page).then(async res => {\n          this.handleMovies(res.results, size);\n          this.setState({\n            page: page + 1\n          });\n        });\n      } catch (error) {}\n    };\n\n    this.handleMovies = (list, size) => {\n      const _this$state3 = this.state,\n            movies = _this$state3.movies,\n            pending_movies = _this$state3.pending_movies,\n            page = _this$state3.page;\n      const obj = generateArrays(list, pending_movies, size);\n      this.setState({\n        movies: [...movies, ...obj.movies],\n        pending_movies: obj.pending\n      });\n    };\n\n    this.state = {\n      movies: [],\n      page: 1,\n      size: 6,\n      page_limit: 5,\n      pending_movies: [],\n      hasMore: true,\n      page_loaded: true,\n      api: 'movie/popular',\n      selected_movie: {}\n    };\n  }\n\n  async componentWillMount() {\n    window.scrollTo(0, 0);\n    window.addEventListener(\"resize\", this.updateSize);\n    await this.updateSize();\n    this.loadElements();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateSize);\n  }\n\n  render() {\n    const _this$state4 = this.state,\n          selected = _this$state4.selected,\n          selected_movie = _this$state4.selected_movie,\n          show_popup = _this$state4.show_popup,\n          movies = _this$state4.movies,\n          page = _this$state4.page,\n          page_limit = _this$state4.page_limit,\n          size = _this$state4.size;\n    return React.createElement(\"section\", {\n      className: \"movies__list flex__start\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      selectCategory: this.selectCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(InfiniteScroll, {\n      dataLength: generateList(movies).length,\n      next: this.loadElements,\n      hasMore: page < page_limit,\n      loader: React.createElement(SmallLoader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, movies && movies.length > 0 ? movies.map((list, i) => {\n      return React.createElement(\"div\", {\n        key: i,\n        id: selected === i ? \"selected__row\" : \"\",\n        className: \"movies__list__flex flex__column\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, selected === i ? React.createElement(\"aside\", {\n        id: \"selected__row__offset\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }) : \"\", React.createElement(\"ul\", {\n        className: \"flex__start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, list.map(m => {\n        return React.createElement(Movie, {\n          mobile: size === 2,\n          key: m.id,\n          isHidden: isHidden,\n          selected: selected === i,\n          handleMovieSelect: () => this.handleMovieSelect(i, m),\n          selected_movie: selected_movie.id === m.id,\n          movie: m,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        });\n      })), selected === i && selected_movie && show_popup ? React.createElement(MoviePopup, {\n        size: size,\n        mobile: size === 2,\n        selected_movie: selected_movie,\n        closePreview: this.closePreview,\n        updateParent: this.updateState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }) : \"\");\n    }) : React.createElement(\"div\", {\n      className: \"movies__first__loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(SmallLoader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default MoviesList;","map":{"version":3,"sources":["/Users/denis/Desktop/projects/movies-app/client/src/components/movies/MoviesList.jsx"],"names":["React","Component","Movie","wait","generateArrays","getMovieSize","generateList","MoviePopup","apiGetRequest","InfiniteScroll","Navbar","SmallLoader","isHidden","el","offsetParent","MoviesList","constructor","overflowBody","val","body","document","querySelector","style","overflow","updateSize","state","movies","pending_movies","size","width","window","innerWidth","obj","setState","pending","handleMovieSelect","row_id","movie","selected","selected_movie","show_popup","scrollToElement","updateState","name","value","then","element","scrollIntoView","behavior","block","inline","selectCategory","category","api","page","loadElements","closePreview","res","handleMovies","results","error","list","page_limit","hasMore","page_loaded","componentWillMount","scrollTo","addEventListener","componentWillUnmount","removeEventListener","render","length","map","i","m","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Movie from \"./Movie\";\nimport { wait, generateArrays, getMovieSize, generateList } from \"../../functions/functions\";\nimport MoviePopup from \"./parts/movie-preview/MoviePopup\";\nimport { apiGetRequest } from \"../../api/api\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport Navbar from \"../navbar/Navbar\";\nimport SmallLoader from \"../parts/SmallLoader\";\nfunction isHidden(el) {\n  return (el.offsetParent === null)\n}\nclass MoviesList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movies: [],\n      page: 1,\n      size: 6,\n      page_limit:5,\n      pending_movies: [],\n      hasMore: true,\n      page_loaded:true,\n      api:'movie/popular',\n      selected_movie:{}\n    };\n  }\n\n\n\n\n  overflowBody = (val) => {\n    let body = document.querySelector('body')\n    body.style.overflow = val ? 'hidden' : ''\n  }\n  async componentWillMount() {\n   \n    window.scrollTo(0,0)\n    window.addEventListener(\"resize\", this.updateSize);\n\n    await this.updateSize();\n    this.loadElements()\n \n  }\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.updateSize);\n  }\n  updateSize = async () => {\n    const { movies, pending_movies, size } = this.state;\n    const width = window.innerWidth;\n\n    const obj = await getMovieSize(movies, pending_movies, width, size);\n    if (obj.movies) {\n      this.setState({\n        movies: obj.movies,\n        pending_movies: obj.pending,\n        size: obj.size,\n      });\n    }\n  };\n\n  handleMovieSelect = (row_id, movie) => {\n    this.setState({\n      selected: row_id,\n      selected_movie: movie,\n      show_popup: true,\n    });\n \n    this.scrollToElement();\n  };\n\n  updateState = (name, value) => {\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  scrollToElement = async () => {\n    const {size} = this.state\n    if(size === 2){\n      this.overflowBody(true)\n    }\n    wait(size === 2 ? 800 : 400).then(() => {\n      var element = document.querySelector(\"#selected__row__offset\");\n      if (element) {\n        element.scrollIntoView({\n          behavior: \"auto\",\n          block: \"start\",\n          inline: \"nearest\",\n        });\n      }\n    });\n  \n  };\n  selectCategory = (category) => {\n    this.setState({\n      api:category.api,\n      page:1,\n      movies:[],\n      pending_movies:[],\n      selected_movie:{},\n      show_popup:false,\n      selected:''\n    }, () => {\n      this.loadElements()\n    })\n}\n  closePreview = () => {\n    const {size} = this.state\n    this.setState({\n      selected: \"\",\n      selected_movie: {},\n      show_popup: \"\",\n    });\n    if(size === 2 ){\n      this.overflowBody(false)\n    }\n  };\n  loadElements = async () => {\n    const { size, page, api } = this.state;\n    \n    try {\n      await apiGetRequest(api, page).then(async (res) => {\n        this.handleMovies(res.results, size);\n        this.setState({\n          page:page + 1\n        })\n      });\n    } catch (error) {}\n  };\n\n\n  handleMovies = (list, size) => {\n    const { movies, pending_movies, page } = this.state;\n    const obj = generateArrays(list, pending_movies, size);\n    this.setState({\n      movies: [...movies, ...obj.movies],\n      pending_movies: obj.pending,\n    });\n   \n  };\n\n  render() {\n    const {\n      selected,\n      selected_movie,\n      show_popup,\n      movies,\n      page,\n      page_limit,\n      size\n    } = this.state;\n    return (  \n      <section className=\"movies__list flex__start\">\n       <Navbar \n       selectCategory = {this.selectCategory}\n       />\n        <InfiniteScroll\n          dataLength={generateList(movies).length} \n          next={this.loadElements}\n          hasMore={page < page_limit}\n          loader={<SmallLoader />}\n        >\n          {movies && movies.length > 0\n            ? movies.map((list, i) => {\n                return (\n                  <div\n                    key={i}\n                    id={selected === i ? \"selected__row\" : \"\"}\n                    className=\"movies__list__flex flex__column\"\n                  >\n                    {selected === i ? (\n                      <aside\n                       id=\"selected__row__offset\"></aside>\n                    ) : (\n                      \"\"\n                    )}\n                    <ul className=\"flex__start\">\n                      {list.map((m) => {\n                        return (\n                          <Movie\n                          mobile = {size === 2}\n                            key={m.id}\n                            isHidden = {isHidden}\n                            selected={selected === i}\n                            handleMovieSelect={() =>\n                              this.handleMovieSelect(i, m)\n                            }\n                            selected_movie={selected_movie.id === m.id}\n                            movie={m}\n                          />\n                        );\n                      })}\n                    </ul>\n                    {selected === i && selected_movie && show_popup ? (\n                      <MoviePopup\n                      size = {size}\n                      mobile = {size === 2}\n                        selected_movie={selected_movie}\n                        closePreview={this.closePreview}\n                        updateParent={this.updateState}\n                      />\n                    ) : (\n                      \"\"\n                    )}\n                  </div>\n                );\n              })\n            : <div className='movies__first__loading'><SmallLoader /></div>}\n        </InfiniteScroll>\n      </section>\n    );\n  }\n}\n\nexport default MoviesList;\n"]},"metadata":{},"sourceType":"module"}